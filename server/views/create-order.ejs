

<div class="py-6">
    <div class="mb-8">
        <div class="flex items-center mb-4">
            <a href="/orders" class="text-gray-500 hover:text-gray-700 mr-4">
                <i class="fas fa-arrow-left text-xl"></i>
            </a>
            <div>
                <h1 class="text-3xl font-bold text-gray-900">Create New Order</h1>
                <p class="text-gray-600">Add items to create a customer order</p>
            </div>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Products Selection -->
        <div class="lg:col-span-2">
            <div class="bg-white rounded-lg shadow">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h2 class="text-lg font-medium text-gray-900">Select Products</h2>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <% products.forEach(product => { %>
                            <div class="border border-gray-200 rounded-lg p-4 hover:border-amber-300 transition-colors cursor-pointer product-card" 
                                 data-id="<%= product.id %>" 
                                 data-name="<%= product.name %>" 
                                 data-price="<%= product.price %>">
                                <div class="flex justify-between items-start mb-2">
                                    <h3 class="font-medium text-gray-900"><%= product.name %></h3>
                                    <span class="text-lg font-bold text-amber-600">€<%= product.price.toFixed(2) %></span>
                                </div>
                                <div class="mb-2">
                                    <span class="inline-block bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full">
                                        <%= product.category %>
                                    </span>
                                </div>
                                <% if (product.description) { %>
                                    <p class="text-sm text-gray-600 mb-3"><%= product.description %></p>
                                <% } %>
                                <button type="button" class="w-full bg-amber-600 text-white py-2 px-4 rounded-md hover:bg-amber-700 transition-colors add-product-btn">
                                    <i class="fas fa-plus mr-2"></i>
                                    Add to Order
                                </button>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="lg:col-span-1">
            <div class="bg-white rounded-lg shadow sticky top-6">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h2 class="text-lg font-medium text-gray-900">Order Summary</h2>
                </div>
                <form method="POST" action="/orders" id="order-form">
                    <div class="p-6">
                        <!-- Customer Name -->
                        <div class="mb-6">
                            <label for="customerName" class="block text-sm font-medium text-gray-700 mb-2">
                                Customer Name *
                            </label>
                            <input type="text" 
                                   id="customerName" 
                                   name="customerName" 
                                   required 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-amber-500"
                                   placeholder="Enter customer name">
                        </div>

                        <!-- Order Items -->
                        <div class="mb-6">
                            <h3 class="text-sm font-medium text-gray-700 mb-3">Order Items</h3>
                            <div id="order-items" class="space-y-3">
                                <div id="empty-state" class="text-center py-8 text-gray-500">
                                    <i class="fas fa-shopping-cart text-3xl mb-2"></i>
                                    <p>No items added yet</p>
                                    <p class="text-sm">Select products to add them to the order</p>
                                </div>
                            </div>
                        </div>

                        <!-- Total -->
                        <div class="border-t border-gray-200 pt-4 mb-6">
                            <div class="flex justify-between items-center">
                                <span class="text-lg font-medium text-gray-900">Total:</span>
                                <span id="order-total" class="text-xl font-bold text-amber-600">€0.00</span>
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <button type="submit" 
                                id="submit-btn"
                                disabled
                                class="w-full bg-gray-400 text-white py-3 px-4 rounded-md font-medium cursor-not-allowed">
                            <i class="fas fa-check mr-2"></i>
                            Create Order
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
let orderItems = [];
let orderTotal = 0;

function updateOrderDisplay() {
    const orderItemsContainer = document.getElementById('order-items');
    const emptyState = document.getElementById('empty-state');
    const totalElement = document.getElementById('order-total');
    const submitBtn = document.getElementById('submit-btn');

    if (orderItems.length === 0) {
        emptyState.style.display = 'block';
        orderItemsContainer.innerHTML = '';
        orderItemsContainer.appendChild(emptyState);
        submitBtn.disabled = true;
        submitBtn.className = 'w-full bg-gray-400 text-white py-3 px-4 rounded-md font-medium cursor-not-allowed';
    } else {
        emptyState.style.display = 'none';
        orderItemsContainer.innerHTML = '';
        
        orderItems.forEach((item, index) => {
            const itemElement = document.createElement('div');
            itemElement.className = 'flex justify-between items-center p-3 bg-gray-50 rounded-md';
            itemElement.innerHTML = `
                <div class="flex-1">
                    <div class="font-medium text-gray-900">${item.name}</div>
                    <div class="text-sm text-gray-600">€${item.price.toFixed(2)} each</div>
                </div>
                <div class="flex items-center space-x-2">
                    <button type="button" class="text-gray-500 hover:text-gray-700" onclick="decreaseQuantity(${index})">
                        <i class="fas fa-minus"></i>
                    </button>
                    <span class="w-8 text-center font-medium">${item.quantity}</span>
                    <button type="button" class="text-gray-500 hover:text-gray-700" onclick="increaseQuantity(${index})">
                        <i class="fas fa-plus"></i>
                    </button>
                    <button type="button" class="text-red-500 hover:text-red-700 ml-2" onclick="removeItem(${index})">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
                <input type="hidden" name="orderItems[${index}][productId]" value="${item.productId}">
                <input type="hidden" name="orderItems[${index}][quantity]" value="${item.quantity}">
                <input type="hidden" name="orderItems[${index}][price]" value="${item.price}">
            `;
            orderItemsContainer.appendChild(itemElement);
        });

        submitBtn.disabled = false;
        submitBtn.className = 'w-full bg-amber-600 text-white py-3 px-4 rounded-md font-medium hover:bg-amber-700 transition-colors';
    }

    // Update total
    orderTotal = orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0);
    totalElement.textContent = `€${orderTotal.toFixed(2)}`;
}

function addProduct(productId, name, price) {
    const existingItem = orderItems.find(item => item.productId === productId);
    
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        orderItems.push({
            productId: parseInt(productId),
            name: name,
            price: parseFloat(price),
            quantity: 1
        });
    }
    
    updateOrderDisplay();
}

function increaseQuantity(index) {
    orderItems[index].quantity += 1;
    updateOrderDisplay();
}

function decreaseQuantity(index) {
    if (orderItems[index].quantity > 1) {
        orderItems[index].quantity -= 1;
    } else {
        orderItems.splice(index, 1);
    }
    updateOrderDisplay();
}

function removeItem(index) {
    orderItems.splice(index, 1);
    updateOrderDisplay();
}

// Add event listeners to product cards
document.querySelectorAll('.add-product-btn').forEach(btn => {
    btn.addEventListener('click', function(e) {
        e.preventDefault();
        const card = this.closest('.product-card');
        const productId = card.dataset.id;
        const name = card.dataset.name;
        const price = card.dataset.price;
        
        addProduct(productId, name, price);
    });
});

// Form validation
document.getElementById('order-form').addEventListener('submit', function(e) {
    const customerName = document.getElementById('customerName').value.trim();
    
    if (!customerName) {
        e.preventDefault();
        alert('Please enter a customer name');
        return;
    }
    
    if (orderItems.length === 0) {
        e.preventDefault();
        alert('Please add at least one item to the order');
        return;
    }
});

// Initialize display
updateOrderDisplay();
</script>
