

<div class="py-6">
    <div class="mb-8">
        <div class="flex items-center justify-between">
            <div class="flex items-center">
                <a href="/orders" class="text-gray-500 hover:text-gray-700 mr-4">
                    <i class="fas fa-arrow-left text-xl"></i>
                </a>
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">Order #<%= order.id %></h1>
                    <p class="text-gray-600">Order details and items</p>
                </div>
            </div>
            <form method="POST" action="/orders/<%= order.id %>/delete" class="inline" onsubmit="return confirm('Are you sure you want to delete this order?')">
                <button type="submit" class="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 flex items-center">
                    <i class="fas fa-trash mr-2"></i>
                    Delete Order
                </button>
            </form>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Order Details -->
        <div class="lg:col-span-2">
            <div class="bg-white rounded-lg shadow">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h2 class="text-lg font-medium text-gray-900">Order Information</h2>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Customer Name</label>
                            <div class="text-lg text-gray-900"><%= order.customerName %></div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Order Date</label>
                            <div class="text-lg text-gray-900">
                                <%= new Date(order.createdAt).toLocaleDateString() %>
                                <span class="text-sm text-gray-500 ml-2">
                                    <%= new Date(order.createdAt).toLocaleTimeString() %>
                                </span>
                            </div>
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div>
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="text-lg font-medium text-gray-900">Order Items</h3>
                            <button id="edit-order-btn" class="bg-blue-600 text-white px-3 py-1 rounded-md hover:bg-blue-700 text-sm">
                                <i class="fas fa-edit mr-1"></i>
                                Edit Order
                            </button>
                        </div>

                        <!-- View Mode -->
                        <div id="view-mode" class="space-y-3">
                            <% order.orderItems.forEach(item => { %>
                                <div class="flex justify-between items-center p-4 bg-gray-50 rounded-lg">
                                    <div class="flex-1">
                                        <div class="font-medium text-gray-900"><%= item.product.name %></div>
                                        <div class="text-sm text-gray-600">
                                            <%= item.product.category %>
                                            <% if (item.product.description) { %>
                                                • <%= item.product.description %>
                                            <% } %>
                                        </div>
                                        <div class="text-sm text-gray-600 mt-1">
                                            €<%= item.price.toFixed(2) %> each
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-lg font-medium text-gray-900">
                                            <%= item.quantity %>x
                                        </div>
                                        <div class="text-sm font-medium text-amber-600">
                                            €<%= (item.quantity * item.price).toFixed(2) %>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>

                        <!-- Edit Mode -->
                        <div id="edit-mode" class="hidden">
                            <div id="edit-items" class="space-y-3 mb-4">
                                <!-- Items will be populated by JavaScript -->
                            </div>

                            <!-- Add New Product -->
                            <div class="border-2 border-dashed border-gray-300 rounded-lg p-4 mb-4">
                                <h4 class="font-medium text-gray-900 mb-3">Add Product</h4>
                                <div class="flex gap-3">
                                    <select id="new-product-select" class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                                        <option value="">Select a product...</option>
                                        <% products.forEach(product => { %>
                                            <option value="<%= product.id %>" data-name="<%= product.name %>" data-price="<%= product.price %>">
                                                <%= product.name %> - €<%= product.price.toFixed(2) %>
                                            </option>
                                        <% }); %>
                                    </select>
                                    <button id="add-product-btn" class="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 disabled:bg-gray-400" disabled>
                                        <i class="fas fa-plus mr-1"></i>
                                        Add
                                    </button>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="flex gap-3">
                                <button id="save-changes-btn" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700">
                                    <i class="fas fa-save mr-1"></i>
                                    Save Changes
                                </button>
                                <button id="cancel-edit-btn" class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600">
                                    <i class="fas fa-times mr-1"></i>
                                    Cancel
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="lg:col-span-1">
            <div class="bg-white rounded-lg shadow sticky top-6">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h2 class="text-lg font-medium text-gray-900">Order Summary</h2>
                </div>
                <div class="p-6">
                    <!-- Summary Stats -->
                    <div class="space-y-4 mb-6">
                        <div class="flex justify-between">
                            <span class="text-gray-600">Total Items:</span>
                            <span class="font-medium"><%= order.orderItems.reduce((sum, item) => sum + item.quantity, 0) %></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Unique Products:</span>
                            <span class="font-medium"><%= order.orderItems.length %></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Subtotal:</span>
                            <span class="font-medium">€<%= order.totalAmount.toFixed(2) %></span>
                        </div>
                    </div>

                    <!-- Total -->
                    <div class="border-t border-gray-200 pt-4 mb-6">
                        <div class="flex justify-between items-center">
                            <span class="text-lg font-medium text-gray-900">Total:</span>
                            <span class="text-2xl font-bold text-amber-600">€<%= order.totalAmount.toFixed(2) %></span>
                        </div>
                    </div>

                    <!-- Actions -->
                    <div class="space-y-3">
                        <a href="/orders" class="w-full bg-gray-100 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-200 transition-colors text-center block">
                            <i class="fas fa-list mr-2"></i>
                            Back to Orders
                        </a>
                        <a href="/orders/new" class="w-full bg-amber-600 text-white py-2 px-4 rounded-md hover:bg-amber-700 transition-colors text-center block">
                            <i class="fas fa-plus mr-2"></i>
                            Create New Order
                        </a>
                    </div>
                </div>
            </div>

            <!-- Order Timeline -->
            <div class="bg-white rounded-lg shadow mt-6">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h2 class="text-lg font-medium text-gray-900">Order Timeline</h2>
                </div>
                <div class="p-6">
                    <div class="space-y-4">
                        <div class="flex items-center">
                            <div class="flex-shrink-0 w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                                <i class="fas fa-check text-green-600 text-sm"></i>
                            </div>
                            <div class="ml-4">
                                <div class="text-sm font-medium text-gray-900">Order Created</div>
                                <div class="text-xs text-gray-500">
                                    <%= new Date(order.createdAt).toLocaleString() %>
                                </div>
                            </div>
                        </div>
                        
                        <% if (order.updatedAt && order.updatedAt !== order.createdAt) { %>
                            <div class="flex items-center">
                                <div class="flex-shrink-0 w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                                    <i class="fas fa-edit text-blue-600 text-sm"></i>
                                </div>
                                <div class="ml-4">
                                    <div class="text-sm font-medium text-gray-900">Order Updated</div>
                                    <div class="text-xs text-gray-500">
                                        <%= new Date(order.updatedAt).toLocaleString() %>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Order editing functionality
    let editingItems = [];
    let originalItems = [];

    // Initialize original items
    <% order.orderItems.forEach(item => { %>
        originalItems.push({
            id: <%= item.id %>,
            productId: <%= item.productId %>,
            productName: '<%= item.product.name %>',
            quantity: <%= item.quantity %>,
            price: <%= item.price %>
        });
    <% }); %>

    // Products data for adding new items
    const availableProducts = [
        <% products.forEach((product, index) => { %>
            {
                id: <%= product.id %>,
                name: '<%= product.name %>',
                price: <%= product.price %>
            }<%= index < products.length - 1 ? ',' : '' %>
        <% }); %>
    ];

    // Edit mode toggle
    document.getElementById('edit-order-btn').addEventListener('click', function() {
        editingItems = [...originalItems];
        showEditMode();
        renderEditItems();
    });

    document.getElementById('cancel-edit-btn').addEventListener('click', function() {
        showViewMode();
    });

    // Save changes
    document.getElementById('save-changes-btn').addEventListener('click', async function() {
        try {
            const response = await fetch(`/orders/<%= order.id %>`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    customerName: '<%= order.customerName %>',
                    orderItems: editingItems.map(item => ({
                        productId: item.productId,
                        quantity: item.quantity,
                        price: item.price
                    }))
                })
            });

            if (response.ok) {
                // Reload the page to show updated order
                window.location.reload();
            } else {
                alert('Error saving changes. Please try again.');
            }
        } catch (error) {
            console.error('Error saving order:', error);
            alert('Error saving changes. Please try again.');
        }
    });

    // Add new product
    document.getElementById('new-product-select').addEventListener('change', function() {
        const addBtn = document.getElementById('add-product-btn');
        addBtn.disabled = !this.value;
    });

    document.getElementById('add-product-btn').addEventListener('click', function() {
        const select = document.getElementById('new-product-select');
        const productId = parseInt(select.value);
        const option = select.selectedOptions[0];

        if (!productId) return;

        // Check if product already exists in order
        const existingItem = editingItems.find(item => item.productId === productId);
        if (existingItem) {
            existingItem.quantity += 1;
        } else {
            editingItems.push({
                id: null, // New item
                productId: productId,
                productName: option.dataset.name,
                quantity: 1,
                price: parseFloat(option.dataset.price)
            });
        }

        renderEditItems();
        select.value = '';
        document.getElementById('add-product-btn').disabled = true;
    });

    function showEditMode() {
        document.getElementById('view-mode').classList.add('hidden');
        document.getElementById('edit-mode').classList.remove('hidden');
        document.getElementById('edit-order-btn').classList.add('hidden');
    }

    function showViewMode() {
        document.getElementById('view-mode').classList.remove('hidden');
        document.getElementById('edit-mode').classList.add('hidden');
        document.getElementById('edit-order-btn').classList.remove('hidden');
    }

    function renderEditItems() {
        const container = document.getElementById('edit-items');
        container.innerHTML = '';

        editingItems.forEach((item, index) => {
            const itemDiv = document.createElement('div');
            itemDiv.className = 'edit-item-container flex justify-between items-center p-4 bg-gray-50 rounded-lg';
            itemDiv.innerHTML = `
                <div class="flex-1">
                    <div class="font-medium text-gray-900">${item.productName}</div>
                    <div class="text-sm text-gray-600 mt-1">€${item.price.toFixed(2)} each</div>
                </div>
                <div class="flex items-center gap-3">
                    <div class="flex items-center gap-2">
                        <button onclick="changeQuantity(${index}, -1)" class="edit-quantity-btn w-8 h-8 bg-red-100 text-red-600 rounded-full hover:bg-red-200 flex items-center justify-center">
                            <i class="fas fa-minus text-xs"></i>
                        </button>
                        <span class="quantity-display">${item.quantity}</span>
                        <button onclick="changeQuantity(${index}, 1)" class="edit-quantity-btn w-8 h-8 bg-green-100 text-green-600 rounded-full hover:bg-green-200 flex items-center justify-center">
                            <i class="fas fa-plus text-xs"></i>
                        </button>
                    </div>
                    <div class="text-right min-w-[80px]">
                        <div class="text-sm font-medium text-amber-600">€${(item.quantity * item.price).toFixed(2)}</div>
                    </div>
                    <button onclick="removeItem(${index})" class="edit-quantity-btn w-8 h-8 bg-red-100 text-red-600 rounded-full hover:bg-red-200 flex items-center justify-center">
                        <i class="fas fa-trash text-xs"></i>
                    </button>
                </div>
            `;
            container.appendChild(itemDiv);
        });

        // Update total
        updateEditTotal();
    }

    function changeQuantity(index, delta) {
        editingItems[index].quantity += delta;
        if (editingItems[index].quantity <= 0) {
            editingItems.splice(index, 1);
        }
        renderEditItems();
    }

    function removeItem(index) {
        editingItems.splice(index, 1);
        renderEditItems();
    }

    function updateEditTotal() {
        const total = editingItems.reduce((sum, item) => sum + (item.quantity * item.price), 0);
        // You could add a total display here if needed
    }
</script>
